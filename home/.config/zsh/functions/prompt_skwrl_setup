#
## Functions my prompt uses for git
#
function _git_info_cmd {
  command git --no-optional-locks status --porcelain=v2 --branch --show-stash 2>&1
}

function _git_remote_cmd {
  command git remote get-url origin --all 2>&1
}

function _git_github_check {
  local origin=$(_git_remote_cmd)
  if [[ "$origin" == *onlyhavecans/* ]]; then
    local RED='\033[0;31m'
    local NOCOLOR='\033[0m'
    echo -e "${RED}WARNING${NOCOLOR}: origin $origin needs migration" >&2
  fi
}

function _git_info_parse {
  local git_status="$1"

  local ahead='↑'
  local behind='↓'
  local stash='$'
  local staged='+'
  local modified='!'
  local untracked='?'
  local branch
  local -Ua symbols

  while IFS= read -r line; do
    case $line in
      "# branch.oid"*) ;;
      "# branch.upstream"*) ;;
      "# branch.head"*)
        branch=$(echo $line | cut -d' ' -f 3)
        ;;
      "# branch.ab"*)
        local ahead_count behind_count
        read ahead_count behind_count <<<$(echo "$line" | cut -d' ' -f 3,4 | tr -d '+-')
        [[ $ahead_count > 0 ]] && symbols+="$ahead"
        [[ $behind_count > 0 ]] && symbols+="$behind"
        ;;
      "# stash"*) symbols+="$stash" ;;
      [12]\ ?[MTADRC]*) symbols+="$modified" ;;
      [12]\ [MTADRC]?*) symbols+="$staged" ;;
      ?\ *) symbols+="$untracked" ;;
      *) symbols+=$line ;;
    esac
  done <<<$git_status

  echo -n "$branch" "${symbols// /}"
}

function _git_info_prompt {
  local branch=$1
  local symbols=$2

  [[ -n $symbols ]] && branch+=" $symbols"
  echo "  $branch"
}

function _git_info {
  local git_status=$(_git_info_cmd)
  if [[ "$git_status" == fatal:* ]]; then
    return
  fi

  local branch symbols
  read -r branch symbols <<<"$(_git_info_parse $git_status)"

  _git_info_prompt "$branch" "$symbols"
  _git_github_check
}

#
## Settings
#
prompt_opts=(subst percent)

#
## prompt layout
#
TOP_PROMPT=''
TOP_PROMPT+='%F{yellow}[%D{%H:%M:%S}]%f ' # Yellow time
TOP_PROMPT+='%F{green}%m'                 # Green Machine name
TOP_PROMPT+='  %2~%f'                    # Green Current directory
TOP_PROMPT+='%F{magenta}$(_git_info)%f'   # Magenta Git info
precmd() {
  print -rP -- $TOP_PROMPT
}
PS1='%(?.%F{blue}.%F{red}%?)❯%f ' # Blue chevron, Red with error num if last command failed

# vi: ft=zsh
