[user]
	name = Amelia Aronsohn
	email = squirrel@wearing.black
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKB1455gJY9YjpfT61kAUjtEkLilH/ejeb2tLwgEAqLA 2022-09-30
[core]
	excludesfile = ~/.gitignore
	editor = vim
	autocrlf = input
[gpg]
	format = ssh
[commit]
	gpgsign = true
[push]
	default = current
[fetch]
	prune = true
[init]
	defaultBranch = main
[pull]
	ff = only
#This is for git.mod that points to private repos
[url "git@github.com:"]
	insteadOf = https://github.com/
[alias]
	ad = add --all
	al = config --get-regexp alias
	ap = add --patch
	br = branch
	c = commit --signoff --verbose
	cm = commit --signoff --message
	commit = commit --signoff
	pl = pull
	ps = push
	review = log --oneline
	s = status
	st = status
	sw = switch
	swc = switch -C
	pr = "!f() { git fetch origin pull/$1/head:pr-$1 && git switch pr-$1; }; f"
	sm = "!f() { git switch main && git pull origin main --prune; }; f"
	wipe = "!f() { git branch | egrep -v '( main$|master$|^\\*)' | xargs git branch -D; }; f"
	open = "!f() {\n    local type=\"${1:-branch}\"\n    local target=\"${2:-HEAD}\"\n    local remote=\"origin\"\n    \n    if [ \"$type\" = \"branch\" -o \"$type\" = \"pr\" ]; then\n        # get full name (i.e. refs/heads/*; refs/remotes/*/*); src: https://stackoverflow.com/a/9753364\n        target=\"$(git rev-parse --symbolic-full-name \"$target\")\"\n        \n        if [ \"$target\" != \"${target#\"refs/remotes/\"}\" ]; then\n            # extract from remote branch reference\n            target=\"${target#\"refs/remotes/\"}\"\n        else\n            # extract from local branch reference; src: https://stackoverflow.com/a/9753364\n            target=\"$(git for-each-ref --format=\"%(upstream:short)\" \"$target\")\"\n        fi\n        # split remote/branch\n        remote=\"${target%%/*}\"\n        target=\"${target#\"$remote/\"}\"\n        \n        if [ -z \"$remote\" ]; then\n            echo \"Branch ($2) does not point to a remote repository.\" >&2\n            return 2\n        fi\n    fi\n    \n    local repo_url=\"$(git remote get-url \"$remote\" | sed -E -e \"s/(\\.(com|org|io))\\:/\\1\\//\" -e \"s/git@/https:\\/\\//\" -e \"s/\\.git$//\")\"\n    if [ -z \"$repo_url\" ]; then\n        echo \"Cannot open: no remote repository configured under (origin)\" >&2\n        return 1\n    fi\n    \n    case \"$(tr \"[:upper:]\" \"[:lower:]\" <<< \"$repo_url\")\" in\n        *github*)\n            [ \"$type\" = \"commit\" ] && repo_url=\"$repo_url/commit/$(git rev-parse \"$target\")\"\n            [ \"$type\" = \"pr\"     ] && repo_url=\"$repo_url/compare/$target?expand=1\"\n            [ \"$type\" = \"tag\"    ] && repo_url=\"$repo_url/releases/tag/$target\"\n            [ \"$type\" = \"branch\" ] && repo_url=\"$repo_url/tree/$target\"\n            ;;\n        *bitbucket*)\n            [ \"$type\" = \"commit\" ] && repo_url=\"$repo_url/commits/$(git rev-parse \"$target\")\"\n            [ \"$type\" = \"pr\"     ] && repo_url=\"$repo_url/pull-requests/new?source=$target\"\n            [ \"$type\" = \"tag\"    ] && repo_url=\"$repo_url/src/$target\"\n            [ \"$type\" = \"branch\" ] && repo_url=\"$repo_url/src/$target\"\n            ;;\n        *gitlab*)\n            [ \"$type\" = \"commit\" ] && repo_url=\"$repo_url/-/commit/$(git rev-parse \"$target\")\"\n            [ \"$type\" = \"pr\"     ] && repo_url=\"$repo_url/-/merge_requests/new?merge_request[source_branch]=$target\"\n            [ \"$type\" = \"tag\"    ] && repo_url=\"$repo_url/-/tags/$target\"\n            [ \"$type\" = \"branch\" ] && repo_url=\"$repo_url/-/tree/$target\"\n            ;;\n        *)\n            echo \"Cannot open: not a GitHub, GitLab, or Bitbucket repository\" >&2\n            return 1\n            ;;\n    esac\n    \n    open \"$repo_url\"\n}; f"

#Silly tools fight for config down here
[hub]
	protocol = ssh
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f

# vi: tabstop=2 noexpandtab
