#!/usr/bin/env bash

errors=()

for dir in $(fd --hidden --no-ignore --fixed-strings .git --type d --exclude .direnv --exclude gocode --exclude .github); do
  LOCAL_DIR=$(realpath "$dir/..")
  MY_GIT="git -C $LOCAL_DIR"

  status_message "Updating $LOCAL_DIR"

  if (( $($MY_GIT remote | wc -l) == 0 )); then
    errors+=("! $LOCAL_DIR does not have a remote so skipping.")
    continue
  fi

  if ! $MY_GIT fetch --prune --prune-tags --quiet --force &>/dev/null; then
    errors+=("! $LOCAL_DIR Unable to fetch remote.")
    continue
  fi

  DEFAULT_BRANCH=master
  if $MY_GIT show-ref --verify --quiet "refs/heads/main"; then
    DEFAULT_BRANCH=main
  fi

  $MY_GIT diff-index --quiet HEAD -- || $MY_GIT stash

  if ! $MY_GIT checkout $DEFAULT_BRANCH &>/dev/null; then
    errors+=("! $LOCAL_DIR Could not check out $DEFAULT_BRANCH.")
    continue
  fi

  if ! $MY_GIT pull; then
    errors+=("! $LOCAL_DIR Could not pull $DEFAULT_BRANCH.")
  fi
done

echo ""
echo ""
status_message "The following repos had errors, please check"
for i in "${errors[@]}"; do
  echo "$i"
done
